$font-weight: 400;

$border-width: 1px;
$border-style: solid;

// ---
// types
$types: (
  default: (
    filled-true-color: $color-primary-darkest ,
    filled-true-color-activate: $color-primary,
    filled-true-border-color: $gray-light,
    filled-true-border-color-activate: $color-primary,
    filled-true-background-color: $gray-white,
    filled-true-background-color-activate: $gray-white,
    filled-false-color: $gray-white,
    filled-false-color-activate: $color-primary,
    filled-false-border-color: currentColor
  ),
  primary: (
    filled-true-color: $gray-white,
    filled-true-color-activate: $gray-white,
    filled-true-border-color: transparent,
    filled-true-border-color-activate: transparent,
    filled-true-background-color: $color-primary,
    filled-true-background-color-activate: $color-primary-dark,
    filled-false-color: $color-primary,
    filled-false-color-activate: $color-primary-dark,
    filled-false-border-color: currentColor
  ),
  link: (
    filled-true-color: $color-primary,
    filled-true-color-activate: $color-primary-dark,
    filled-true-border-color: transparent,
    filled-true-border-color-activate: transparent,
    filled-true-background-color: transparent,
    filled-true-background-color-activate: transparent,
    filled-false-color: $gray-white,
    filled-false-color-activate: $color-primary-dark,
    filled-false-border-color: transparent
  ),
  danger: (
    filled-true-color: $gray-white,
    filled-true-color-activate: $gray-white,
    filled-true-border-color: transparent,
    filled-true-border-color-activate: transparent,
    filled-true-background-color: $color-danger,
    filled-true-background-color-activate: darken($color-danger, 10%),
    filled-false-color: $color-danger,
    filled-false-color-activate: darken($color-danger, 10%),
    filled-false-border-color: currentColor
  ),
  icon: (
    filled-true-color: $gray-dark,
    filled-true-color-activate: $gray-darkest,
    filled-true-border-color: transparent,
    filled-true-border-color-activate: transparent,
    filled-true-background-color: transparent,
    filled-true-background-color-activate: $gray-lighter,
    filled-false-color: $gray-white,
    filled-false-color-activate: $color-primary,
    filled-false-border-color: currentColor
  )
);

// sizes
$sizes: (
  xs: (
    padding-horizontal: 0,
    height: 22px,
    font-size: $font-size-xs
  ),
  sm: (
    padding-horizontal: 16px,
    height: 34px,
    font-size: $font-size-sm
  ),
  md: (
    padding-horizontal: 20px,
    height: 34px,
    font-size: $font-size-sm
  ),
  lg: (
    padding-horizontal: 24px,
    height: 34px,
    font-size: $font-size-md
  )
);

// shapes
$shapes: (
  rect: (
    xs: 0px,
    sm: 0px,
    md: 0px,
    lg: 0px
  ),
  radius: (
    xs: 3px,
    sm: 3px,
    md: 5px,
    lg: 5px
  ),
  rounded: (
    xs: 100%,
    sm: 100%,
    md: 100%,
    lg: 100%
  ),
  circle: (
    xs: 50%,
    sm: 50%,
    md: 50%,
    lg: 50%
  )
);

// disabled
$disabled-color: $gray;
$disabled-border-color: transparent;
$disabled-background-color: $gray-lighter;

.button {
  cursor: pointer;
  flex-shrink: 0;
  align-items: center;
  font-weight: $font-weight;
  border-width: $border-width;
  border-style: $border-style;
  transition: all 400ms $transition-mode;

  &[data-is-block='true'] {
    display: flex;
    width: 100%;
  }

  &[data-is-block='false'] {
    display: inline-flex;
    vertical-align: middle;
  }

  @each $type, $styles in $types {
    &:not(:disabled)[data-type='#{$type}'] {
      &[data-is-filled='true'] {
        color: map-get($styles, filled-true-color);
        border-color: map-get($styles, filled-true-border-color);
        background-color: map-get($styles, filled-true-background-color);

        &:not(:disabled):hover,
        &:not(:disabled)[data-is-active='true'] {
          color: map-get($styles, filled-true-color-activate);
          border-color: map-get($styles, filled-true-border-color-activate);
          background-color: map-get($styles, filled-true-background-color-activate);

          // 擴大 xs 的 hover 範圍
          &[data-size='xs'] {
            box-shadow: 0 0 0 2px map-get($styles, filled-true-background-color-activate);
          }
        }
      }

      &[data-is-filled='false'] {
        color: map-get($styles, filled-false-color);
        border-color: map-get($styles, filled-false-border-color);
        background-color: transparent;

        &:not(:disabled):hover,
        &:not(:disabled)[data-is-active='true'] {
          color: map-get($styles, filled-false-color-activate);
        }
      }

      &:hover[data-is-view='true'] {
        cursor: initial;
        &:hover {
          background-color: map-get($styles, filled-true-background-color);
        }
      }
    }
  }

  @each $size, $styles in $sizes {
    &[data-size='#{$size}'] {
      padding: 0 map-get($styles, padding-horizontal);
      height: map-get($styles, height);
      font-size: map-get($styles, font-size);
    }
  }

  @each $shape, $shape-sizes in $shapes {
    &[data-shape='#{$shape}'] {
      @each $shape-size, $border-radius in $shape-sizes {
        &[data-size='#{$shape-size}'] {
          @if ($shape == 'circle') {
            padding: 0;
            width: map-get(map-get($sizes, $shape-size), height);
            border-radius: $border-radius;
          } @else if ($shape == 'rounded') {
            border-radius: #{map-get(map-get($sizes, $shape-size), height)} / $border-radius;
          } @else {
            border-radius: $border-radius;
          }
        }
      }
    }
  }

  &:disabled {
    color: $disabled-color;
    border-color: $disabled-border-color;

    // 取消 xs 的 disabled background-color
    &:not([data-size='xs']) {
      background-color: $disabled-background-color;
    }
  }
}
